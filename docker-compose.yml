services:
  db:
    restart: unless-stopped
    image: "mariadb:10.6.9"
    ports:
      - "3307:3306"
    env_file:
      - .env
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      app-network:
  redis:
    restart: unless-stopped
    image: eqalpha/keydb:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      app-network:
  roadrunner:
    restart: unless-stopped
    build:
      context: ./
      dockerfile: docker/roadrunner/Dockerfile
    working_dir: /app
    command:
      - /bin/bash
      - ./start.sh
    links:
      - db
      - redis
      - rabbitmq
      - neo4j
      - eventstore
    depends_on:
      - db
      - redis
      - rabbitmq
      - neo4j
      - eventstore
    volumes:
      - ./:/app
      - ./docker/roadrunner/php.ini:/usr/local/etc/php/conf.d/custom.ini
    ports:
      - "6001:6001"
      - "2112:2112"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - .env
    networks:
      app-network:
  web:
    restart: unless-stopped
    image: nginx:alpine
    depends_on:
      - roadrunner
      - db
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
    links:
      - roadrunner
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/fastcgi_params.conf:/etc/nginx/fastcgi_params.conf
      - ./docker/nginx/mime-types.conf:/etc/nginx/mime-types.conf
      - ./docker/nginx/ssl.conf:/etc/nginx/ssl.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      app-network:
  grafana:
    restart: unless-stopped
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    links:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      app-network:
  prometheus:
    restart: unless-stopped
    image: prom/prometheus
    ports:
      - "9090:9090"
    links:
      - roadrunner
    volumes:
      - prometheus-storage:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      app-network:
  rabbitmq:
    restart: unless-stopped
    build:
      context: ./
      dockerfile: docker/rabbitmq/Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    env_file:
      - .env
    networks:
      app-network:
  neo4j:
    restart: unless-stopped
    image: neo4j:latest
    environment:
      - NEO4J_PLUGINS=["graph-data-science", "apoc"]
    env_file:
      - .env
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
      - ./docker/neo4j:/conf
    networks:
      app-network:
  eventstore:
    restart: unless-stopped
    image: eventstore/eventstore:24.10.0-alpha-arm64v8
    env_file:
      - .env
    environment:
      - EVENTSTORE_INSECURE=true
    volumes:
      - eventstore-data:/var/lib/eventstore
    ports:
      - "2113:2113"
    networks:
      app-network:
volumes:
  mariadb-data:
  redis-data:
  grafana-storage:
  prometheus-storage:
  neo4j-data:
  eventstore-data:
networks:
  app-network:
