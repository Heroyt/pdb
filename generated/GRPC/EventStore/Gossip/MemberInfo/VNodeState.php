<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: gossip.proto

namespace GRPC\EventStore\Gossip\MemberInfo;

use UnexpectedValueException;

/**
 * Protobuf type <code>event_store.client.gossip.MemberInfo.VNodeState</code>
 */
class VNodeState
{
    /**
     * Generated from protobuf enum <code>Initializing = 0;</code>
     */
    const Initializing = 0;
    /**
     * Generated from protobuf enum <code>DiscoverLeader = 1;</code>
     */
    const DiscoverLeader = 1;
    /**
     * Generated from protobuf enum <code>Unknown = 2;</code>
     */
    const Unknown = 2;
    /**
     * Generated from protobuf enum <code>PreReplica = 3;</code>
     */
    const PreReplica = 3;
    /**
     * Generated from protobuf enum <code>CatchingUp = 4;</code>
     */
    const CatchingUp = 4;
    /**
     * Generated from protobuf enum <code>Clone = 5;</code>
     */
    const PBClone = 5;
    /**
     * Generated from protobuf enum <code>Follower = 6;</code>
     */
    const Follower = 6;
    /**
     * Generated from protobuf enum <code>PreLeader = 7;</code>
     */
    const PreLeader = 7;
    /**
     * Generated from protobuf enum <code>Leader = 8;</code>
     */
    const Leader = 8;
    /**
     * Generated from protobuf enum <code>Manager = 9;</code>
     */
    const Manager = 9;
    /**
     * Generated from protobuf enum <code>ShuttingDown = 10;</code>
     */
    const ShuttingDown = 10;
    /**
     * Generated from protobuf enum <code>Shutdown = 11;</code>
     */
    const Shutdown = 11;
    /**
     * Generated from protobuf enum <code>ReadOnlyLeaderless = 12;</code>
     */
    const ReadOnlyLeaderless = 12;
    /**
     * Generated from protobuf enum <code>PreReadOnlyReplica = 13;</code>
     */
    const PreReadOnlyReplica = 13;
    /**
     * Generated from protobuf enum <code>ReadOnlyReplica = 14;</code>
     */
    const ReadOnlyReplica = 14;
    /**
     * Generated from protobuf enum <code>ResigningLeader = 15;</code>
     */
    const ResigningLeader = 15;

    private static $valueToName = [
        self::Initializing => 'Initializing',
        self::DiscoverLeader => 'DiscoverLeader',
        self::Unknown => 'Unknown',
        self::PreReplica => 'PreReplica',
        self::CatchingUp => 'CatchingUp',
        self::PBClone => 'Clone',
        self::Follower => 'Follower',
        self::PreLeader => 'PreLeader',
        self::Leader => 'Leader',
        self::Manager => 'Manager',
        self::ShuttingDown => 'ShuttingDown',
        self::Shutdown => 'Shutdown',
        self::ReadOnlyLeaderless => 'ReadOnlyLeaderless',
        self::PreReadOnlyReplica => 'PreReadOnlyReplica',
        self::ReadOnlyReplica => 'ReadOnlyReplica',
        self::ResigningLeader => 'ResigningLeader',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            $pbconst =  __CLASS__. '::PB' . strtoupper($name);
            if (!defined($pbconst)) {
                throw new UnexpectedValueException(sprintf(
                        'Enum %s has no value defined for name %s', __CLASS__, $name));
            }
            return constant($pbconst);
        }
        return constant($const);
    }
}

