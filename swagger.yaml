openapi: 3.0.0
info:
  title: 'PDB API'
  description: 'API documentation.'
  version: '1.0'
servers:
  -
    url: 'https://pdb.local'
    description: Dev
  -
    url: 'https://localhost'
    description: Local
paths:
  /command/factory:
    post:
      tags:
        - command
        - factory
      description: 'Create a new factory.'
      operationId: createFactory
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: 'Factory name'
                  type: string
                  nullable: false
                capacity:
                  description: 'Storage capacity'
                  type: integer
                  default: 50
                  nullable: true
              type: object
      responses:
        '201':
          $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/schemas/ErrorResponse'
  '/command/factory/{id}':
    put:
      tags:
        - command
        - factory
      description: 'Update a factory.'
      operationId: updateFactory
      parameters:
        -
          parameter: id
          name: id
          in: path
          description: 'Factory ID'
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactoryUpdateRequest'
      responses:
        '200':
          $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/schemas/ErrorResponse'
        '400':
          $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - command
        - factory
      description: 'Delete a factory.'
      operationId: deleteFactory
      parameters:
        -
          parameter: id
          name: id
          in: path
          description: 'Factory ID'
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/schemas/ErrorResponse'
        '412':
          $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/schemas/ErrorResponse'
  '/command/factory/{id}/storage':
    put:
      tags:
        - command
        - factory
      description: 'Update a factory storage.'
      operationId: updateFactoryStorage
      parameters:
        -
          parameter: id
          name: id
          in: path
          description: 'Factory ID'
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - materials
              properties:
                materials:
                  type: array
                  items: { required: [id, quantity], properties: { id: { description: 'Material ID.', type: integer }, quantity: { description: 'Quantity difference (positive for adding stock, negative for removing).', type: integer } }, type: object }
              type: object
      responses:
        '200':
          $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/schemas/ErrorResponse'
        '400':
          $ref: '#/components/schemas/ErrorResponse'
        '412':
          $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/schemas/ErrorResponse'
  /query/factory:
    get:
      tags:
        - query
        - factory
      operationId: 'Find factories'
      parameters:
        -
          name: name
          in: query
          description: 'Factory name'
          required: false
          schema:
            type: string
        -
          name: 'input[]'
          in: query
          description: 'Input material IDs'
          required: false
          schema:
            description: 'Material IDs'
            type: array
            items:
              type: integer
        -
          name: 'output[]'
          in: query
          description: 'Output material IDs'
          required: false
          schema:
            description: 'Material IDs'
            type: array
            items:
              type: integer
      responses:
        '200':
          description: 'List of found factories'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FactoryFullDto'
  '/query/factory/{id}':
    get:
      tags:
        - query
        - factory
      operationId: 'Get factory'
      parameters:
        -
          name: id
          in: path
          description: 'Factory id'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/schemas/FactoryFullDto'
        '404':
          $ref: '#/components/schemas/ErrorResponse'
  /query/factory/stopped:
    get:
      tags:
        - query
        - factory
      operationId: 'Get stopped factories'
      responses:
        '200':
          description: 'List of stopped factories'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoppedFactoryDto'
        '404':
          $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    FactoryFullDto:
      properties:
        id:
          type: integer
        name:
          type: string
        storageCapacity:
          type: integer
        storage:
          type: array
          items:
            $ref: '#/components/schemas/StorageDto'
        process:
          $ref: '#/components/schemas/ProcessDto'
      type: object
    ProcessDto:
      properties:
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/ProcessPartDto'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/ProcessPartDto'
      type: object
    ProcessPartDto:
      properties:
        id:
          type: integer
        material:
          $ref: '#/components/schemas/Material'
        quantity:
          type: integer
      type: object
    StoppedFactoryDto:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/FactoryFullDto'
        -
          properties:
            stored:
              type: integer
            outSize:
              type: integer
            hasAllMaterials:
              type: boolean
          type: object
    StorageDto:
      properties:
        material:
          $ref: '#/components/schemas/Material'
        quantity:
          type: integer
        size:
          type: integer
      type: object
    Direction:
      type: string
      enum:
        - in
        - out
    Connection:
      properties:
        assigned:
          type: boolean
        active:
          type: boolean
        speed:
          type: integer
        storageCapacity:
          type: integer
      type: object
    ConnectionStorage:
      properties:
        connection:
          $ref: '#/components/schemas/Connection'
        material:
          $ref: '#/components/schemas/Material'
        maxQuantity:
          type: integer
        quantity:
          type: integer
      type: object
    Factory:
      properties:
        name:
          type: string
        storageCapacity:
          type: integer
        storage:
          type: array
          items:
            $ref: '#/components/schemas/FactoryStorage'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/Process'
      type: object
    FactoryStorage:
      properties:
        facility:
          $ref: '#/components/schemas/Factory'
        material:
          $ref: '#/components/schemas/Material'
        quantity:
          type: integer
      type: object
    Material:
      properties:
        name:
          type: string
        size:
          type: integer
        wildcard:
          description: 'If true, accepts and material'
          type: boolean
      type: object
    Process:
      properties:
        processFactory:
          $ref: '#/components/schemas/Factory'
        material:
          $ref: '#/components/schemas/Material'
        type:
          $ref: '#/components/schemas/Direction'
        quantity:
          type: integer
      type: object
    ConnectionUpdateRequest:
      properties:
        assigned:
          type: boolean
          nullable: true
        active:
          type: boolean
          nullable: true
        speed:
          type: integer
          nullable: true
        storageCapacity:
          type: integer
          nullable: true
      type: object
    FactoryUpdateRequest:
      properties:
        name:
          type: string
          nullable: true
        storageCapacity:
          type: integer
          minimum: 1
          nullable: true
      type: object
    FactoryUpdateStorageRequest:
      properties:
        material:
          $ref: '#/components/schemas/Material'
        quantity:
          type: integer
      type: object
    MaterialUpdateRequest:
      properties:
        name:
          type: string
          nullable: true
        size:
          type: integer
          nullable: true
        wildcard:
          type: boolean
          nullable: true
      type: object
    ErrorResponse:
      properties:
        title:
          type: string
          example: 'Error title'
        type:
          $ref: '#/components/schemas/ErrorType'
        detail:
          type: string
          example: 'Error description'
          nullable: true
        exception:
          properties:
            message:
              type: string
              example: 'Some exception description'
            code:
              type: integer
              example: 123
            trace:
              type: array
              items:
                type: object
              example:
                -
                  file: index.php
                  line: 1
                  function: abc
                  args: ['Argument value']
          type: object
          nullable: true
        values:
          type: object
          example:
            key1: value1
            key2: value2
          nullable: true
      type: object
    SuccessResponse:
      properties:
        message:
          type: string
          example: Message
        detail:
          type: string
          example: Description
          nullable: true
        values:
          type: object
          example:
            key1: value1
            key2: value2
          nullable: true
      type: object
    ErrorType:
      type: string
      enum:
        - validation_error
        - database_error
        - internal_error
        - resource_not_found_error
        - resource_access_error
tags:
  -
    name: command
    description: command
  -
    name: factory
    description: factory
  -
    name: query
    description: query
